package pw.binom.db.serialization

import kotlinx.serialization.descriptors.SerialDescriptor

class ColumnNamesVisitor(
  val prefix: String,
  val func: ColumnHandle,
  val forceAutoGenerated: Boolean,
) : EntityVisitor {

  fun interface ColumnHandle {
    fun column(
      name: String,
      useQuotes: Boolean,
      id: Boolean,
      index: Boolean,
      autoGenerated: Boolean,
    )
  }

  data class Column(
    val name: String,
    val useQuotes: Boolean,
    val id: Boolean,
    val index: Boolean,
    val autoGenerated: Boolean,
  )

  companion object {
    fun toList(descriptor: SerialDescriptor): List<Column> {
      val out = ArrayList<Column>()
      toList(descriptor, out)
      return out
    }

    fun toList(descriptor: SerialDescriptor, dest: MutableList<Column>) {
      forEachFields(descriptor) {
          name,
          useQuotes,
          id,
          index,
          autoGenerated,
        ->
        dest += Column(
          name = name,
          useQuotes = useQuotes,
          id = id,
          index = index,
          autoGenerated = autoGenerated,
        )
      }
    }

    fun forEachFields(descriptor: SerialDescriptor, func: ColumnHandle) {
      val visitor = ColumnNamesVisitor(
        prefix = "",
        func = func,
        forceAutoGenerated = false,
      )
      descriptor.accept(visitor)
    }
  }

  override fun column(
    descriptor: SerialDescriptor,
    elementIndex: Int,
    index: Boolean,
    name: String,
    autoGenerated: Boolean,
    id: Boolean,
    useQuotes: Boolean,
  ) {
    func.column(
      name = "$prefix$name",
      useQuotes = useQuotes,
      index = index,
      autoGenerated = autoGenerated || forceAutoGenerated,
      id = id,
    )
  }

  override fun embedded(
    descriptor: SerialDescriptor,
    elementIndex: Int,
    index: Boolean,
    name: String,
    useQuotes: Boolean,
    id: Boolean,
    splitter: String,
    autoGenerated: Boolean,
  ): EntityVisitor = ColumnNamesVisitor(
    prefix = "$prefix$name$splitter",
    func = func,
    forceAutoGenerated = autoGenerated,
  )
}
