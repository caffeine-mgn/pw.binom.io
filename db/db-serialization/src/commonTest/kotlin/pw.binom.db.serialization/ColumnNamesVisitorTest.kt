package pw.binom.db.serialization

import kotlinx.serialization.Contextual
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import pw.binom.date.DateTime
import kotlin.test.Test
import kotlin.test.assertContentEquals

class ColumnNamesVisitorTest {

  @Serializable
  class BusinessField(
    @SerialName("create_at")
    @Contextual
    val createAt: DateTime = DateTime.now,

    @SerialName("modify_at")
    @Contextual
    val modifyAt: DateTime = DateTime.now,
  )

  @Serializable
  class User(
    @Id
    @AutoGenerated
    val id: Long,
    @IndexColumn
    val login: String,
    @Embedded
    val business: BusinessField = BusinessField(),
  )

  @Test
  fun test() {
    val expected = listOf(
      ColumnNamesVisitor.Column(name = "id", useQuotes = false, id = true, index = false, autoGenerated = true),
      ColumnNamesVisitor.Column(name = "login", useQuotes = false, id = false, index = true, autoGenerated = false),
      ColumnNamesVisitor.Column(
        name = "business_create_at",
        useQuotes = false,
        id = false,
        index = false,
        autoGenerated = false,
      ),
      ColumnNamesVisitor.Column(
        name = "business_modify_at",
        useQuotes = false,
        id = false,
        index = false,
        autoGenerated = false,
      ),
    )
    val actual = ColumnNamesVisitor.toList(User.serializer().descriptor)
    assertContentEquals(expected, actual)
  }
}
