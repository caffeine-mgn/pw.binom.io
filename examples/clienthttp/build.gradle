apply plugin: 'org.jetbrains.kotlin.multiplatform'

kotlin {
    def nativeEntryPoint='pw.binom.io.examples.httpClient.main'

    linuxX64 { // Use your target instead.
        binaries {
            executable{
                entryPoint = nativeEntryPoint
            }
        }
    }

    linuxArm32Hfp { // Use your target instead.
        binaries {
            executable{
                entryPoint = nativeEntryPoint
            }
        }
    }

    mingwX64 { // Use your target instead.
        binaries {
            executable{
                entryPoint = nativeEntryPoint
            }
        }
    }

    mingwX86 { // Use your target instead.
        binaries {
            executable{
                entryPoint = nativeEntryPoint
            }
        }
    }

    jvm()

    sourceSets {

        commonMain {
            dependencies {
                api "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
                api project(":core")
                api project(":httpClient")
            }
        }

        mingwX64Main {
            dependencies {
                dependsOn commonMain
            }
        }

        mingwX86Main {
            dependencies {
                dependsOn commonMain
            }
        }

        linuxX64Main {
            dependencies {
                dependsOn commonMain
            }
        }

        linuxArm32HfpMain {
            dependencies {
                dependsOn commonMain
            }
        }

//        mingwMain {
//            dependencies {
//                dependsOn commonMain
//                api(kotlin("stdlib"))
//            }
//        }

        jvmMain {
            dependencies {
                api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
            }
        }
    }
}

jvmJar {
    with {
        from {
            (configurations.jvmRuntimeClasspath).collect {
                it.isDirectory() ? it : zipTree(it)
            }
        } {
            exclude "META-INF/*.SF"
            exclude "META-INF/*.DSA"
            exclude "META-INF/*.RSA"
        }
    }
    manifest {
        attributes 'Main-Class': "pw.binom.io.examples.httpClient.HttpClientKt"
    }
}

task runMainExecutableJvm(dependsOn: jvmJar, group: "run") {
    doLast {
        javaexec { main = "-jar"; args jvmJar.archiveFile.get() }
    }
}